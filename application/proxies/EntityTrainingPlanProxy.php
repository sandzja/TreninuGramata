<?php

namespace proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntityTrainingPlanProxy extends \Entity\TrainingPlan implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getExecutionOrder()
    {
        $this->__load();
        return parent::getExecutionOrder();
    }

    public function setExecutionOrder($executionOrder)
    {
        $this->__load();
        return parent::setExecutionOrder($executionOrder);
    }

    public function getsetIds()
    {
        $this->__load();
        return parent::getsetIds();
    }

    public function setsetIds($set_id)
    {
        $this->__load();
        return parent::setsetIds($set_id);
    }

    public function getDeletedTime()
    {
        $this->__load();
        return parent::getDeletedTime();
    }

    public function setDeletedTime($deletedTime)
    {
        $this->__load();
        return parent::setDeletedTime($deletedTime);
    }

    public function isDefault()
    {
        $this->__load();
        return parent::isDefault();
    }

    public function setDefault($isDefault)
    {
        $this->__load();
        return parent::setDefault($isDefault);
    }

    public function hasWorkoutGoal()
    {
        $this->__load();
        return parent::hasWorkoutGoal();
    }

    public function setWorkoutGoal($hasWorkoutGoal)
    {
        $this->__load();
        return parent::setWorkoutGoal($hasWorkoutGoal);
    }

    public function isChallenge()
    {
        $this->__load();
        return parent::isChallenge();
    }

    public function setChallenge($isChallenge)
    {
        $this->__load();
        return parent::setChallenge($isChallenge);
    }

    public function isSynced()
    {
        $this->__load();
        return parent::isSynced();
    }

    public function setSynced($isSynced)
    {
        $this->__load();
        return parent::setSynced($isSynced);
    }

    public function isFeatured()
    {
        $this->__load();
        return parent::isFeatured();
    }

    public function setFeatured($isFeatured = true)
    {
        $this->__load();
        return parent::setFeatured($isFeatured);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getTrainingPlanReports()
    {
        $this->__load();
        return parent::getTrainingPlanReports();
    }

    public function addTrainingPlanReport(\Entity\TrainingPlan\Report $trainingPlanReport)
    {
        $this->__load();
        return parent::addTrainingPlanReport($trainingPlanReport);
    }

    public function getExercises()
    {
        $this->__load();
        return parent::getExercises();
    }

    public function setExercises($exercises)
    {
        $this->__load();
        return parent::setExercises($exercises);
    }

    public function addExercise(\Entity\Exercise $exercise)
    {
        $this->__load();
        return parent::addExercise($exercise);
    }

    public function getSport()
    {
        $this->__load();
        return parent::getSport();
    }

    public function setSport(\Entity\Sport $sport)
    {
        $this->__load();
        return parent::setSport($sport);
    }

    public function getOriginalTrainingPlan()
    {
        $this->__load();
        return parent::getOriginalTrainingPlan();
    }

    public function setOriginalTrainingPlan($originalTrainingPlan)
    {
        $this->__load();
        return parent::setOriginalTrainingPlan($originalTrainingPlan);
    }

    public function getTrainingPlanCopies()
    {
        $this->__load();
        return parent::getTrainingPlanCopies();
    }

    public function addTrainingPlanCopy(\Entity\TrainingPlan $trainingPlan)
    {
        $this->__load();
        return parent::addTrainingPlanCopy($trainingPlan);
    }

    public function getFeedPost()
    {
        $this->__load();
        return parent::getFeedPost();
    }

    public function setFeedPost(\Entity\Feed\Post\TrainingPlan $feedPost)
    {
        $this->__load();
        return parent::setFeedPost($feedPost);
    }

    public function countDistances()
    {
        $this->__load();
        return parent::countDistances();
    }

    public function countTime()
    {
        $this->__load();
        return parent::countTime();
    }

    public function countExerciseDuration()
    {
        $this->__load();
        return parent::countExerciseDuration();
    }

    public function populate(array $values)
    {
        $this->__load();
        return parent::populate($values);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'date', 'executionOrder', 'deletedTime', 'isDefault', 'hasWorkoutGoal', 'isChallenge', 'isSynced', 'isFeatured', 'user', 'trainingPlanReports', 'exercises', 'sport', 'originalTrainingPlan', 'trainingPlanCopies', 'feedPost', 'setIds');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}